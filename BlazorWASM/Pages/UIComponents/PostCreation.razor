@namespace UIComponents
@inject NavigationManager pageNav;

@using HttpClientInterfaces
@using Domain.DTOs
@using Domain.Models
@inject IPostService postCreation;

<h3>PostCreation</h3>


<h3>SubForumCreation</h3>

<form>
  <div class="form-group">
    <label>Username</label>
    <input type="text" class="form-control" placeholder="Username" @bind="username">
  </div>
  <div class="form-group">
    <label>Topic of Sub-Form</label>
    <input type="text" class="form-control" @bind="topic">
  </div>
  <div class="form-group">
    <label>Title</label>
    <input type="text" class="form-control" placeholder="Title" @bind="title">
  </div>
  <div class="form-group">
      <label>Body</label>
      <input type="text" class="form-control" placeholder="Body" @bind="body">
    </div>
  <div class="form-check">
  </div>
  
  @if (!string.IsNullOrEmpty(errorMessage))
  {
    <p>@errorMessage</p>
  }
  </form>
  <button @onclick="Create" class="btn btn-primary">Create</button>
  <button @onclick="((args)=> OnChange.InvokeAsync(false))" class="btn btn-primary">Cancel</button>


@code {

    [Parameter]
    public int Id { get; set; }
  
    [Parameter]
    public EventCallback<bool> OnChange { set; get; }

  private string username;
  private string topic;
  private string title;
  private string body;

  private string errorMessage = "";


  private async void Create()
  {
    try
    {  // would be nice to make it separate
      if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(topic) || string.IsNullOrEmpty(title) || string.IsNullOrEmpty(body))
      {
        throw new Exception("Please enter all values.");
      }
      Post post = await postCreation.CreatePost(new PostCreationDto(Id, username, topic, title,body));
      pageNav.NavigateTo($"/Forum/{post.Id}");
    }
    catch (Exception e)
    {
      Console.WriteLine(e);
      errorMessage = e.Message;
    }
  }

}